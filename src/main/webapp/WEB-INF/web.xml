<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!-- 定义了WEB应用的名字 -->
    <display-name>yuesheng-hotel-supplies</display-name>
    <!-- 声明WEB应用的描述信息 -->
    <description>月升宾馆酒店用品</description>

    <!-- 在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。 -->
    <servlet>
        <servlet-name>mvc-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
        当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。
        正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
        当值相同时，容器就会自己选择顺序来加载。-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc-dispatcher</servlet-name>
        <!-- 用于拦截请求（url-pattern为 / ，说明拦截所有请求） -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 为了能够处理中文的post请求，再配置一个encodingFilter，以避免post请求中文出现乱码情况 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- ContextLoaderListener的作用就是启动Web容器时，自动装配ApplicationContext的配置信息
    。因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，
    就会默认执行它实现的方法。spring中的所有bean都由这个类来创建
     ContextLoaderListener.getCurrentWebApplicationContext().getBean("**")可以访问某个bean-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- classpath：只会到你指定的class路径中查找找文件;
        classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找.-->
        <param-value>classpath:config/applicationContext.xml</param-value>
    </context-param>
</web-app>
